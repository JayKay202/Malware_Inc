using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Malware_Inc
{
    public partial class Form1 : Form
    {
        Random gen = new Random();
        Int64 Money = 0;
        List<Country> World = new List<Country>();
        List<Country> World2 = new List<Country>();
        List<Country> World3 = new List<Country>();
        Int64 devicesWorld;
        CountryList listCountry = new CountryList();
        CountryList listCountry2 = new CountryList();
        CountryList listCountry3 = new CountryList();
        Country China = new Country() { countryName = "China", devices = 1363560000, fixedDevices = 1363560000 };
        Country India = new Country() { countryName = "India", devices = 1242070000, fixedDevices = 1242070000 };
        Country UnitedStates = new Country() { countryName = "United States", devices = 317768000, fixedDevices = 317768000 };
        Country Indonesia = new Country() { countryName = "Indonesia", devices = 249866000, fixedDevices = 249866000 };
        Country Brazil = new Country() { countryName = "Brazil", devices = 201032714, fixedDevices = 201032714 };
        Country Pakistan = new Country() { countryName = "Pakistan", devices = 186015000, fixedDevices = 186015000 };
        Country WestAfrica = new Country() { countryName = "WestAfrica", devices = 397297688, fixedDevices = 397297688 };
        Country SEAsia = new Country() { countryName = "South East Asia", devices = 665739395, fixedDevices = 665739395 };
        Country Russia = new Country() { countryName = "Russia", devices = 143700000, fixedDevices = 143700000 };
        Country Japan = new Country() { countryName = "Japan", devices = 127120000, fixedDevices = 127120000 };
        Country Mexico = new Country() { countryName = "Mexico", devices = 119713203, fixedDevices = 119713203 };
        Country Philippines = new Country() { countryName = "Philippines", devices = 99329000, fixedDevices = 99329000 };
        Country Egypt = new Country() { countryName = "Egypt", devices = 86188600, fixedDevices = 86188600 };
        Country Germany = new Country() { countryName = "Germany", devices = 80716000, fixedDevices = 80716000 };
        Country Iran = new Country() { countryName = "Iran", devices = 77315000, fixedDevices = 77315000 };
        Country Turkey = new Country() { countryName = "Turkey", devices = 76667864, fixedDevices = 76667864 };
        Country France = new Country() { countryName = "France", devices = 65844000, fixedDevices = 65844000 };
        Country UnitedKingdom = new Country() { countryName = "United Kingdom", devices = 63705000, fixedDevices = 63705000 };
        Country Italy = new Country() { countryName = "Italy", devices = 59996777, fixedDevices = 59996777 };
        Country SouthAfrica = new Country() { countryName = "South Africa", devices = 52981991, fixedDevices = 52981991 };
        Country SouthKorea = new Country() { countryName = "South Korea", devices = 50219669, fixedDevices = 50219669 };
        Country NorthKorea = new Country() { countryName = "North Korea", devices = 25729788, fixedDevices = 25729788 };
        Country Colombia = new Country() { countryName = "Colombia", devices = 47522000, fixedDevices = 47522000 };
        Country Spain = new Country() { countryName = "Spain", devices = 46609700, fixedDevices = 46609700 };
        Country Ukraine = new Country() { countryName = "Ukraine", devices = 45410071, fixedDevices = 45410071 };
        Country EastAfrica = new Country() { countryName = "East Africa", devices = 440369707, fixedDevices = 440369707 };
        Country Poland = new Country() { countryName = "Poland", devices = 38502396, fixedDevices = 38502396 };
        Country Sudan = new Country() { countryName = "Sudan", devices = 37964000, fixedDevices = 37964000 };
        Country CentralAfrica = new Country() { countryName = "Central Africa", devices = 177277818, fixedDevices = 177277818 };
        Country Canada = new Country() { countryName = "Canada", devices = 35344962, fixedDevices = 35344962 };
        Country Iraq = new Country() { countryName = "Iraq", devices = 34035000, fixedDevices = 34035000 };
        Country Angola = new Country() { countryName = "Angola", devices = 32412847, fixedDevices = 32412847 };
        Country Kazakhstan = new Country() { countryName = "Kazakhstan", devices = 18679137, fixedDevices = 18679137 };
        Country NewGuinea = new Country() { countryName = "New Guinea", devices = 8872849, fixedDevices = 8872849 };
        Country BalticStates = new Country() { countryName = "Baltic States", devices = 6195000, fixedDevices = 6195000 };
        Country Australia = new Country() { countryName = "Australia", devices = 25371403, fixedDevices = 25371403 };
        Country Libya = new Country() { countryName = "Libya", devices = 6830631, fixedDevices = 6830631 };
        Country SaudiArabia = new Country() { countryName = "Saudi Arabia", devices = 34577437, fixedDevices = 34577437 };
        Country Sweden = new Country() { countryName = "Sweden", devices = 10072074, fixedDevices = 10072074 };
        Country NewZealand = new Country() { countryName = "New Zealand", devices = 4805288, fixedDevices = 4805288 };
        Country CentralAmerica = new Country() { countryName = "Central America", devices = 178767895, fixedDevices = 178767895 };
        Country BalkanStates = new Country() { countryName = "Balkan States", devices = 55000000, fixedDevices = 55000000 };
        Country Norway = new Country() { countryName = "Norway", devices = 5402907, fixedDevices = 5402907 };
        Country Iceland = new Country() { countryName = "Iceland", devices = 340287, fixedDevices = 340287 };
        Country Algeria = new Country() { countryName = "Algeria", devices = 43504835, fixedDevices = 43504835 };
        Country Argentina = new Country() { countryName = "Argentina", devices = 45016150, fixedDevices = 45016150 };
        Country Bolivia = new Country() { countryName = "Bolivia", devices = 11603729, fixedDevices = 11603729 };
        Country Peru = new Country() { countryName = "Peru", devices = 32771919, fixedDevices = 32771919 };
        Country Greenland = new Country() { countryName = "Greenland", devices = 56728, fixedDevices = 56728 };
        Country Afganistan = new Country() { countryName = "Afganistan", devices = 38543199, fixedDevices = 38543199 };
        Country MiddleEast  = new Country() { countryName = "Middle East ", devices = 411000000, fixedDevices = 411000000 };
        Country CentralEurope = new Country() { countryName = "Central Europe", devices = 44448562, fixedDevices = 44448562 };
        Country CentralAsia = new Country() { countryName = "Central Asia", devices = 73850518, fixedDevices = 73850518 };
        Country Finland = new Country() { countryName = "Finland", devices = 5537022, fixedDevices = 5537022 };
        Country Zimbabwe = new Country() { countryName = "Zimbabwe", devices = 14768683, fixedDevices = 14768683 };
        Country Morocco = new Country() { countryName = "Morocco", devices = 36720548, fixedDevices = 36720548 };
        Country Caribbean = new Country() { countryName = "Caribbean", devices = 43447072, fixedDevices = 43447072 };
        Country Botswana = new Country() { countryName = "Botswana", devices = 2330821, fixedDevices = 2330821 };
        Country Madagascar = new Country() { countryName = "Madagascar", devices = 27377215, fixedDevices = 27377215 };
        Malware User = new Malware() { Name = "test", InfectionLevel = 1, IncomeLevel = 1 };
        int MinInfected;
        int MaxInfected;
        Boolean reseachStart = false;
        double research = 0;
        int dif;
        double researchRate;
        string outcome;
        int dayTill = 0;
        int researchDate = 0;
        Boolean Trigger = true;
        Double possibleInfect = 0.15;
        Double Blocked = 0.85;
        List<string> log = new List<string>();


        Boolean start = false;
        Boolean first = true;
        int day = 1;


        public Form1()
        {
            InitializeComponent();
            
            //listCountry.CountriesList.Add(Iraq);
            //dataGridView1.DataSource = listCountry;
        }
        
            private void timer1_Tick(object sender, EventArgs e)
        {
            devicesWorld = 0;
            
           
            foreach (var country in World)
            {
                int test = gen.Next(MinInfected, MaxInfected);
                int LocalInfected = test * 10;
                double possible = country.fixedDevices * possibleInfect;
                double impossible = country.fixedDevices * Blocked;
                
                country.devices = country.devices - LocalInfected;
                if (country.devices < impossible)
                {
                    country.devices = Convert.ToInt32(impossible);
                }
                if (country.devices < 0)
                {
                    country.devices = 0;
                }
            }
            foreach (var country in World2)
            {
                int test = gen.Next(MinInfected, MaxInfected);
                int LocalInfected = test * 10;
                double possible = country.fixedDevices * possibleInfect;
                double impossible = country.fixedDevices * Blocked;

                country.devices = country.devices - LocalInfected;
                if (country.devices < impossible)
                {
                    country.devices = Convert.ToInt32(impossible);
                }
                if (country.devices < 0)
                {
                    country.devices = 0;
                }
            }
            foreach (var country in World3)
            {
                int test = gen.Next(MinInfected, MaxInfected);
                int LocalInfected = test * 10;
                double possible = country.fixedDevices * possibleInfect;
                double impossible = country.fixedDevices * Blocked;

                country.devices = country.devices - LocalInfected;
                if (country.devices < impossible)
                {
                    country.devices = Convert.ToInt32(impossible);
                }
                if (country.devices < 0)
                {
                    country.devices = 0;
                }
            }
            
            //China.devices = China.devices - 10000;
            //SouthKorea.devices = SouthKorea.devices - 10000;
            foreach (var country in World)
            {
                devicesWorld = devicesWorld + country.devices;
            }
            foreach (var country in World2)
            {
                devicesWorld = devicesWorld + country.devices;
            }
            foreach (var country in World3)
            {
                devicesWorld = devicesWorld + country.devices;
            }

            Int64 Infected = 7873916099 - devicesWorld;
            double PercentWorld = ((double) Infected / 7873916099);
            PercentWorld = PercentWorld * 100;
            //label12.Text = Convert.ToString(PercentWorld);
            progressBar1.Value = Convert.ToInt32(PercentWorld);
            label2.Text = "Healthy Devices: " + devicesWorld.ToString();
            label3.Text = "Infected Devices: " + Infected.ToString();
            Int64 DayIncome = Infected * 1/4;
            Money = Money + DayIncome;
            labelMoney.Text = "Money: " + Money;
            label1.Text = "Day: " + day;
            //var world = new List<int>();
            if (PercentWorld == 100)
            {
                outcome = "win";
            }
           
            day++;
           
            var bindingList = new BindingList<Country>(listCountry.CountriesList);
            var source = new BindingSource(bindingList, null);
            dataGridView1.DataSource = source;
            
            var bindingList2 = new BindingList<Country>(listCountry2.CountriesList);
            var source2 = new BindingSource(bindingList2, null);
            dataGridView2.DataSource = source2;
            
            var bindingList3 = new BindingList<Country>(listCountry3.CountriesList);
            var source3 = new BindingSource(bindingList3, null);
            dataGridView3.DataSource = source3;
            //List<Person> persons = new List<Person>();

            //persons.Add(test);
            dataGridView1.DataSource = World;
            dataGridView2.DataSource = World2;
            dataGridView3.DataSource = World3;

            if (reseachStart == false && dif == 0)
            {
                if (Trigger == true)
                {
                    if (User.InfectionLevel >= 6 || User.IncomeLevel >= 5)
                    {
                        researchDate = day + dayTill;
                        Trigger = false; 
                    }        
                }               
                else if (researchDate == day)
                {
                    reseachStart = true;
                    researchRate = 0.1;
                }
                else if (day == 600)
                {
                    reseachStart = true;
                    researchRate = 0.1;
                }
            }
            else if (reseachStart == false && dif == 1)
            {
                if (Trigger == true)
                {
                    if (User.InfectionLevel >= 4 || User.IncomeLevel >= 4)
                    {
                        researchDate = day + dayTill;
                        Trigger = false;
                    }
                }
                else if (researchDate == day)
                {
                    reseachStart = true;
                    researchRate = 0.25;
                }
                else if (day == 550)
                {
                    reseachStart = true;
                    researchRate = 0.25;
                }
            }
            else if (reseachStart == false && dif == 2)
            {
                if (Trigger == true)
                {
                    if (User.InfectionLevel >= 3 || User.IncomeLevel >= 3)
                    {
                        researchDate = day + dayTill;
                        Trigger = false;
                    }
                }
                else if (researchDate == day)
                {
                    reseachStart = true;
                    researchRate = 0.40;
                }
                else if (day == 400)
                {
                    reseachStart = true;
                    researchRate = 0.40;
                }

            }

            else if (reseachStart == true)
            {
                research = research + researchRate;
                label13.Text = "Research Percentage Complete: " + Convert.ToString(research);
                if (research >= 100)
                {
                    outcome = "lose";
                }
                progressBar2.Value = Convert.ToInt32(research);
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (first == true)
            {
                PopUp popup = new PopUp();
                DialogResult dialogresult = popup.ShowDialog();
                if (dialogresult == DialogResult.OK)
                {
                    Console.WriteLine("You clicked OK");
                }
                else if (dialogresult == DialogResult.Cancel)
                {
                    Console.WriteLine("You clicked either Cancel or X button in the top right corner");
                }
                popup.Dispose();

                string malwareName = PopUp.Malware_Name;
                User.Name = malwareName;
                dif = PopUp.Difficulty;//0,1,2
                label7.Text = "Malware Name: " + User.Name;
                dayTill = gen.Next(25, 50);
                World.Add(China);
                World.Add(India);
                World.Add(UnitedStates);
                World.Add(Indonesia);
                World.Add(Brazil);
                World.Add(Pakistan);
                World.Add(WestAfrica);
                World.Add(SEAsia);
                World.Add(Russia);
                World.Add(Japan);
                World.Add(Mexico);
                World.Add(Philippines);
                World.Add(Egypt);
                World.Add(Germany);
                World.Add(Iran);
                World.Add(Turkey);
                World.Add(France);
                World.Add(UnitedKingdom);
                World.Add(Italy);
                World.Add(SouthAfrica);

                World2.Add(SouthKorea);
                World2.Add(NorthKorea);
                World2.Add(Colombia);
                World2.Add(Spain);
                World2.Add(Ukraine);
                World2.Add(EastAfrica);
                World2.Add(Argentina);
                World2.Add(Poland);
                World2.Add(Sudan);
                World2.Add(CentralAfrica);
                World2.Add(Canada);
                World2.Add(Iraq);
                World2.Add(Angola);
                World2.Add(Kazakhstan);
                World2.Add(NewGuinea);
                World2.Add(BalticStates);
                World2.Add(Australia);
                World2.Add(Libya);
                World2.Add(SaudiArabia);
                World2.Add(Sweden);

                World3.Add(NewZealand);
                World3.Add(CentralAmerica);
                World3.Add(BalkanStates);
                World3.Add(Norway);
                World3.Add(Iceland);
                World3.Add(Algeria);
                World3.Add(Bolivia);
                World3.Add(Peru);
                World3.Add(Greenland);
                World3.Add(Afganistan);
                World3.Add(MiddleEast);
                World3.Add(CentralEurope);
                World3.Add(CentralAsia);
                World3.Add(Finland);
                World3.Add(Zimbabwe);
                World3.Add(Morocco);
                World3.Add(Caribbean);
                World3.Add(Botswana);
                World3.Add(Madagascar);
                first = false;
                dataGridView1.DataSource = World;
                dataGridView2.DataSource = World2;
                dataGridView3.DataSource = World3;
                dataGridView1.Columns["fixedDevices"].Visible = false;
                dataGridView1.Columns["countryName"].HeaderText = "Country Name";
                dataGridView2.Columns["fixedDevices"].Visible = false;
                dataGridView2.Columns["countryName"].HeaderText = "Country Name";
                dataGridView3.Columns["fixedDevices"].Visible = false;
                dataGridView3.Columns["countryName"].HeaderText = "Country Name";
                timer2.Enabled = true;
                listBox1.Items.Add("Day " + Convert.ToString(day) + ": Malware is currently a virus and can spread by Selling Infected USB");
            }
            
            if (start == false)
            {
                start = true;
                timer1.Enabled = true;
                timer2.Enabled = true;
            }
            else if (start == true)
            {
                start = false;
                timer1.Enabled = false;
                timer1.Enabled = false;
            }

        }

        private void timer2_Tick(object sender, EventArgs e)
        {
            if(tabControl1.SelectedIndex == 0)
            {
                if (start == true)
                {
                    timer1.Enabled = true;
                }
            }
            else if (tabControl1.SelectedIndex == 1)
            {
                timer1.Enabled = false;
            }
            if (trackBar1.Value == 0)
            {
                timer1.Interval = 2000;
            }
            else if (trackBar1.Value == 1)
            {
                timer1.Interval = 1000;
            }
            else if (trackBar1.Value == 2)
            {
                timer1.Interval = 500;
            }
            MinInfected = User.InfectionLevel * 8;
            MaxInfected = User.InfectionLevel * 10;

        }

        private void buttonIncomeUpgrade_Click(object sender, EventArgs e)
        {
            if (User.IncomeLevel == 1 && Money >= 100)
            {
                User.IncomeLevel = 2;
                Money = Money - 100;
                label9.Text = "Level 2";
                labelMoney.Text = "Money: " + Money;
                listBox1.Items.Add("Day " + Convert.ToString(day) + ": Upgraded to a worm");

            }
            else if (User.IncomeLevel == 2 && Money >= 100)
            {
                User.IncomeLevel = 3;
                Money = Money - 100;
                label9.Text = "Level 3";
                labelMoney.Text = "Money: " + Money;
                listBox1.Items.Add("Day " + Convert.ToString(day) + ": Upgraded to a adware");
            }
            else if (User.IncomeLevel == 3 && Money >= 100)
            {
                User.IncomeLevel = 4;
                Money = Money - 100;
                label9.Text = "Level 4";
                labelMoney.Text = "Money: " + Money;
                listBox1.Items.Add("Day " + Convert.ToString(day) + ": Upgraded to a malvertising");
            }
            else if (User.IncomeLevel == 4 && Money >= 100)
            {
                User.IncomeLevel = 5;
                Money = Money - 100;
                label9.Text = "Level 5";
                labelMoney.Text = "Money: " + Money;
                listBox1.Items.Add("Day " + Convert.ToString(day) + ": Upgraded to a spyware");
            }
            else if (User.IncomeLevel == 5 && Money >= 100)
            {
                User.IncomeLevel = 6;
                Money = Money - 100;
                label9.Text = "Level 6";
                labelMoney.Text = "Money: " + Money;
                listBox1.Items.Add("Day " + Convert.ToString(day) + ": Upgraded to a ransomware");
                
            }
            else if (User.IncomeLevel == 6)
            {
                System.Windows.Forms.MessageBox.Show("Already Fully Upgraded");
            }
            else 
            {
                label11.Text = "Insufficent Funds";
            }
            listBox1.SelectedIndex = listBox1.Items.Count - 1;
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void buttonInfectionUpgrade_Click(object sender, EventArgs e)
        {
            if (User.InfectionLevel == 1 && Money >= 100)
            {
                User.InfectionLevel = 5;
                Money = Money - 100;
                label10.Text = "Level 2";
                labelMoney.Text = "Money: " + Money;
                listBox1.Items.Add("Day " + Convert.ToString(day) + ": Malware can now spread using LAN Infection");

            }
            else if (User.InfectionLevel == 5 && Money >= 100)
            {
                User.InfectionLevel = 10;
                Money = Money - 100;
                label10.Text = "Level 3";
                labelMoney.Text = "Money: " + Money;
                listBox1.Items.Add("Day " + Convert.ToString(day) + ": Malware can now spread using P2P File Share");
            }
            else if (User.InfectionLevel == 10 && Money >= 100)
            {
                User.InfectionLevel = 15;
                Money = Money - 100;
                label10.Text = "Level 4";
                labelMoney.Text = "Money: " + Money;
                listBox1.Items.Add("Day " + Convert.ToString(day) + ": Malware can now spread using Email Attachments");
            }
            else if (User.InfectionLevel == 15 && Money >= 100)
            {
                User.InfectionLevel = 20;
                Money = Money - 100;
                label10.Text = "Level 5";
                labelMoney.Text = "Money: " + Money;
                listBox1.Items.Add("Day " + Convert.ToString(day) + ": Malware can now spread using Instant Messaging");
            }
            else if (User.InfectionLevel == 20 && Money >= 100)
            {
                User.InfectionLevel = 25;
                Money = Money - 100;
                label10.Text = "Level 6";
                labelMoney.Text = "Money: " + Money;
                listBox1.Items.Add("Day " + Convert.ToString(day) + ": Malware can now spread using Social Media");
                //app stores
            }
            else if (User.InfectionLevel == 25 && Money >= 100)
            {
                User.InfectionLevel = 30;
                Money = Money - 100;
                label10.Text = "Level 7";
                labelMoney.Text = "Money: " + Money;
                listBox1.Items.Add("Day" + Convert.ToString(day) + ": Malware can now spread using Drive Website Pop-ups");
                //app stores
            }
            else if (User.InfectionLevel == 30 && Money >= 100)
            {
                User.InfectionLevel = 35;
                Money = Money - 100;
                label10.Text = "Level 8";
                labelMoney.Text = "Money: " + Money;
                listBox1.Items.Add("Day " + Convert.ToString(day) + ": Malware can now spread using Drive by Sites");
                //app stores
            }
            else if (User.InfectionLevel == 35)
            {
                System.Windows.Forms.MessageBox.Show("Already Fully Upgraded");
            }
            else
            {
                label11.Text = "Insufficent Funds";
            }
            listBox1.SelectedIndex = listBox1.Items.Count - 1;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (possibleInfect == 0.15 && Money >= 100)
            {
                possibleInfect = 0.30;
                Blocked = 0.70;
                Money = Money - 100;
                labelMoney.Text = "Money: " + Money;

            }
            else if (possibleInfect == 0.30 && Money >= 100)
            {
                possibleInfect = 0.50;
                Blocked = 0.50;
                Money = Money - 100;
                labelMoney.Text = "Money: " + Money;
            }
            else if (possibleInfect == 0.50 && Money >= 100)
            {
                possibleInfect = 0.75;
                Blocked = 0.25;
                Money = Money - 100;
                labelMoney.Text = "Money: " + Money;
            }
            else if (possibleInfect == 0.75 && Money >= 100)
            {
                possibleInfect = 1;
                Blocked = 0;
                Money = Money - 100;
                labelMoney.Text = "Money: " + Money;
                listBox1.Items.Add("Day " + day + ": National Infrastructure can now be infected");
            }
            else if (User.InfectionLevel == 1)
            {
                System.Windows.Forms.MessageBox.Show("Already Fully Upgraded");
            }
            else
            {
                label11.Text = "Insufficent Funds";
            }

        }
    }
    }
    


